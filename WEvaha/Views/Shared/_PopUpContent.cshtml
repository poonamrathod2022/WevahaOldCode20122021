@model WEvaha.Models.DashboardProfileModel
@if (Model.IsFullyRegistered == 0)
{
    <style>
        .error {
            color: #F00;
        }    
    </style>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ddlRelationshipStatus").val("10");
            $("#ddlFoodPreference").val("360");
            $("#ddlEducation").val("415");
            $("#ddlLanguage").val("29");
            //$("#ddlJob :selected").val()
        });
    </script>
    <div class="modal-header">
        <div style="color:#fff; font-size:23px; font-weight:500;">Personal Details</div>
    </div>
    <div class="modal-body" style="padding:20px 40px; background:#fff;">

        <div class="form-group">
            <div class="row">
                <div class="col-md-12" style="padding-left:0px;">
                    <h4 style="font-size:16px; color:#3ca0a8; font-weight:500;">About Myself</h4>
                </div>
            </div>
        </div>
        <form id="RegisterPopup" name="RegisterPopup">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">First Name <span class="ReDot">*</span></label>
                        @Html.TextBoxFor(model => model.PersonalDetails.ProfileName, new { @class = "form-control", @id = "txtProfileName", @name = "txtProfileName" })
                        @Html.HiddenFor(model => model.PersonalDetails.ProfileId, new { @id = "hdnProfileId", @name = "hdnProfileId" })
                    </div>
                    <div class="col-md-6" style="padding:0px;">
                        <label style="font-size:15px; font-weight:500;">Last Name <span class="ReDot">*</span></label>
                        @Html.TextBoxFor(model => model.PersonalDetails.ProfileLastName, new { @class = "form-control", @id = "txtProfileLastName", @name = "txtProfileLastName" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Date of Birth <span class="ReDot">*</span></label>
                        @Html.TextBoxFor(model => model.PersonalDetails.DateofBirth, new { @id = "txtDOB", @name = "txtDOB", @placeholder = "dd-mm-yyyy", @class = "form-control", @autocomplete = "off" })
                    </div>
                    <div class="col-md-6" style="padding:0px;">
                        <label style="font-size:15px; font-weight:500;">Mobile Number <span class="ReDot">*</span></label>
                        @Html.TextBoxFor(model => model.PersonalDetails.Mobile, new { @class = "form-control", @id = "phone", @type = "tel", @name = "txtMobile", @style = "width:100%" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Relationship Status <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.AboutMySelf.RelationshipStatus, new SelectList(Model.AboutMySelf.RelationshipStatusOpti, "Value", "Text"), new { @id = "ddlRelationshipStatus", @class = "form-control" })
                    </div>
                    <div class="col-md-6" style="padding-left: 0px;padding-top: 5px;">
                        <label style="font-size:15px; font-weight:500;"><span class="ReDot"></span></label>
                        @Html.TextBoxFor(model => model.AboutMySelf.RelationshipDetails, new { @class = "form-control", @id = "txtRelationshipDetails", @name = "txtRelationshipDetails", @placeholder = "Relationship Details" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Occupation <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Job, new SelectList(Model.AboutMySelf.JobOpti, "Value", "Text"), "Select Occupation", new { @id = "ddlJob", @class = "form-control" })

                    </div>
                    <div class="col-md-6" style="padding-left: 0px;padding-top: 5px;">
                        <label style="font-size:15px; font-weight:500;"><span class="ReDot"></span></label>
                        @Html.TextBoxFor(model => model.AboutMySelf.JobDetails, new { @class = "form-control", @id = "txtJobDetails", @name = "txtJobDetails", @placeholder = "Occupation Details" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Religion </label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Religion, new SelectList(Model.AboutMySelf.ReligionOpti, "Value", "Text"), new { @id = "ddlReligion", @class = "form-control" })
                    </div>
                    <div class="col-md-6" style="padding:0px;">
                        <label style="font-size:15px; font-weight:500;">Language (Mother Tongue) <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Language, new SelectList(Model.AboutMySelf.LanguageOpti, "Value", "Text"), new { @class = "form-control", @id = "ddlLanguage" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Caste </label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Caste, new SelectList(Model.AboutMySelf.sCasteOpti, "Value", "Text"), "Select Caste", new { @class = "castestyle form-control", @id = "ddlCaste" })
                    </div>
                    <div class="col-md-6" style="padding:0px;">
                        <label style="font-size:15px; font-weight:500;">Food Preferences </label>
                        @Html.DropDownListFor(model => model.AboutMySelf.FoodPreference, new SelectList(Model.AboutMySelf.FoodPreferences, "Value", "Text"), new { @class = "form-control", @id = "ddlFoodPreference" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Height </label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Height, new SelectList(Model.AboutMySelf.HeightOpti, "Value", "Text"), "Select Height", new { @id = "ddlHeight", @class = "form-control" })
                    </div>
                    <div class="col-md-6" style="padding:0px;">
                        <label style="font-size:15px; font-weight:500;">Email ID</label>
                        @Html.TextBoxFor(model => model.userProfile.Email, new { @id = "txtEmailid", @class = "form-control", @placeholder = "Email", @disabled = "disabled", @Value = ViewBag.Email })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-6" style="padding-left:0px;">
                        <label style="font-size:15px; font-weight:500;">Qualification </label>
                        @Html.DropDownListFor(model => model.AboutMySelf.Education, new SelectList(Model.AboutMySelf.EducationOpti, "Value", "Text"), "Education", new { @id = "ddlEducation", @class = "form-control" })
                    </div>
                    <div class="col-md-6" style="padding:0px; padding-top:5px;">
                        <label style="font-size:15px; font-weight:500;"><span class="ReDot"></span></label>
                        @Html.TextBoxFor(model => model.AboutMySelf.EducationDetails, new { @class = "form-control", @id = "txtEducationDetails", @name = "txtEducationDetails", @placeholder = "Qualification Details" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" style="padding:15px 0px;">
                        <h4 style="font-size:16px; color:#3ca0a8; font-weight:500;">Image Upload <span class="ReDot">*</span></h4>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" style="margin-bottom:15px;">
                        <input type="file" id="fileupload" name="fileupload" class="form-control-file" placeholder="Your Mail">
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" style="padding:15px 0px;">
                        <h4 style="font-size:16px; color:#3ca0a8; font-weight:500;">Home Town Address </h4>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label style="font-size:15px;">Country <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.PersonalDetails.Country, new SelectList(Model.PersonalDetails.CountryOpti, "Value", "Text"), "Country", new { @class = "form-control", @id = "ddlCountry" })
                    </div>
                    <div class="col-md-3">
                        <label style="font-size:16px;">State <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.PersonalDetails.State, new SelectList(Model.PersonalDetails.StateOpti, "Value", "Text"), "State", new { @class = "form-control", @id = "ddlState" })
                    </div>

                    <div class="col-md-3">
                        <label style="font-size:15px;">City</label>
                        @Html.DropDownListFor(model => model.PersonalDetails.City, new SelectList(Model.PersonalDetails.CityOpti, "Value", "Text"), "City", new { @class = "form-control", @id = "ddlCity" })
                    </div>
                    <div class="col-md-3">
                        <label style="font-size:16px;">Zip Code </label>
                        @Html.TextBoxFor(model => model.PersonalDetails.Zipcode, new { @class = "form-control", @id = "txtZipcode" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" style="padding:15px 0px;">
                        <h4 style="font-size:15px; color:#3ca0a8; font-weight:500;">Current Job/Residence</h4>
                    </div>
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="form-group">

                <div class="col-md-12" style="padding-bottom:15px;">
                    @Html.CheckBoxFor(model => model.PersonalDetails.IsSameasAbove, new { @id = "chkjob", @name = "chkjob" }) Same as above
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label style="font-size:15px;">Country <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.PersonalDetails.JobCountry, new SelectList(Model.PersonalDetails.JobCountryOpti, "Value", "Text"), "Country", new { @class = "form-control", @id = "ddlJobCountry" })
                    </div>
                    <div class="col-md-3">
                        <label style="font-size:16px;">State <span class="ReDot">*</span></label>
                        @Html.DropDownListFor(model => model.PersonalDetails.JobState, new SelectList(Model.PersonalDetails.JobStateOpti, "Value", "Text"), "State", new { @class = "form-control", @id = "ddlJobState" })
                    </div>

                    <div class="col-md-3">
                        <label style="font-size:15px;">City </label>
                        @Html.DropDownListFor(model => model.PersonalDetails.JobCity, new SelectList(Model.PersonalDetails.JobCityOpti, "Value", "Text"), "City", new { @class = "form-control", @id = "ddlJobCity" })
                    </div>
                    <div class="col-md-3">
                        <label style="font-size:16px;">Zip Code </label>
                        @Html.TextBoxFor(model => model.PersonalDetails.JobZipcode, new { @class = "form-control", @id = "txtJobZipcode" })
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12" style="padding:0px;">
                        <h4 style="font-size:16px; color:#3ca0a8; font-weight:500;">Myself </h4>
                        @Html.TextAreaFor(model => model.PersonalDetails.Introduction, new { @name = "Indtoduction", @class = "form-control", @id = "Indtoduction", @placeholder = "Hi! While I’m still figuring this all out, here’s something I know for sure - I’m excited to be here! The chance to meet Unique, Engaging, and Interesting people is pretty dang neat. If you think you might fit that thought, drop me a message.", @rows = "4" })
                    </div>
                    (Please Write About Yourself or Use Default Message or  &nbsp; <a href="@Url.Action("DatingProfile", "Home")" target="_blank">Click Here</a> &nbsp;for help)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group text-center" style="margin-top:30px;">
                <button id="btnfSubmit" type="submit" style="background:#E00150; color:#fff; border-radius:10px; padding:10px 15px; font-size:16px; font-weight:500; cursor:pointer;">Save</button>
            </div>
        </form>

    </div>
    <style>
        .ReDot {
            color: #F00;
        }
    </style>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#ddlRelationshipStatus").val("10");
            $("#ddlFoodPreference").val("360");
            $("#ddlEducation").val("415");
            $("#ddlLanguage").val("29");
            //$("#ddlJob :selected").val()
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#txtDOB').datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:-18"
            });
            $('#dropdownID').val("Value to be selected");
        });
    </script>

    <script type="text/javascript">
    $(document).ready(function () {
        $("#ddlLanguage").change(function () {
            var langId = $(this).val();
            $.ajax({
            url: "@Url.Action("GetCastebyLanguage", "DashBoard")",
                data: { LanguageId: langId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $(".castestyle").html('');
                var optionhtml1 = '<option value="' +
                    0 + '">' + "Select Caste" + '</option>';
                $(".castestyle").append(optionhtml1);
                $.each(data, function (i) {
                    var optionhtml = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $(".castestyle").append(optionhtml);
                });
            }
            });
        });
        $("#ddlslanguage").change(function () {
            var langId = $(this).val();
            $.ajax({
            url: "@Url.Action("GetCastebyLanguage", "DashBoard")",
                data: { LanguageId: langId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $("#ddlsCaste").html('');
                var optionhtml1 = '<option value="' +
                    0 + '">' + "Select Caste" + '</option>';
                $("#ddlsCaste").append(optionhtml1);
                $.each(data, function (i) {
                    var optionhtml = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $("#ddlsCaste").append(optionhtml);
                });
            }
            });
        });
        $("#ddlCountry").change(function () {
            var CountryId = $(this).val();
             $.ajax({
            url: "@Url.Action("States", "DashBoard")",
                 data: { CountryId: CountryId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $("#ddlState").html('');
                var optionhtml1 = '<option value="' +
                    0 + '">' + "Select State" + '</option>';
                $("#ddlState").append(optionhtml1);
                $.each(data, function (i) {
                    var optionhtml = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $("#ddlState").append(optionhtml);
                });
            }
            });
        });
        //
        $("#ddlState").change(function () {
            var StateId = $(this).val();
            var CountryId = $("#ddlCountry option:selected").val();
             $.ajax({
            url: "@Url.Action("Cities", "DashBoard")",
                 data: { StateId: StateId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $("#ddlCity").html('');
                var optionhtml1 = '<option value="' +
                    0 + '">' + "Select City" + '</option>';
                $("#ddlCity").append(optionhtml1);
                $.each(data, function (i) {
                    var optionhtml = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $("#ddlCity").append(optionhtml);
                });
            }
            });
        });
        $("#ddlJobCountry").change(function () {
            var jCountryId = $(this).val();
             $.ajax({
            url: "@Url.Action("States", "DashBoard")",
                 data: { CountryId: jCountryId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $("#ddlJobState").html('');
                var optionhtml3 = '<option value="' +
                    0 + '">' + "Select State" + '</option>';
                $("#ddlJobState").append(optionhtml3);
                $.each(data, function (i) {
                    var optionhtm3 = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $("#ddlJobState").append(optionhtm3);
                });
            }
            });
        });
        //
        $("#ddlJobState").change(function () {
            var jStateId = $(this).val();
           $.ajax({
            url: "@Url.Action("Cities", "DashBoard")",
                 data: { StateId: jStateId},
            dataType: "json",
            type: "GET",
            error: function () {
                alert(" An error occurred.");
            },
            success: function (data) {
                $("#ddlJobCity").html('');
                var optionhtml2 = '<option value="' +
                    0 + '">' + "Select City" + '</option>';
                $("#ddlJobCity").append(optionhtml2);
                $.each(data, function (i) {
                    var optionhtml6 = '<option value="' + data[i].Value + '">' +data[i].Text + '</option>';
                    $("#ddlJobCity").append(optionhtml6);
                });
            }
            });
        });

    });
    </script>
    <script type="text/javascript">
    $(document).ready(function () {
        $('#btnfSubmit').click(function () {
            $('#RegisterPopup').validate({
                rules: {

                    'PersonalDetails.ProfileName': {
                        required: true
                    },

                    'PersonalDetails.ProfileLastName': {
                        required: true
                    },
                    'PersonalDetails.DateofBirth': {
                        required: true
                    },
                    'PersonalDetails.Mobile': {
                        required: true
                    },

                    'AboutMySelf.Language': {
                        required: true
                    },
                    fileupload: {
                        required: true
                    },


                    'AboutMySelf.Job': {
                        required: true
                    },
                    'AboutMySelf.RelationshipStatus': {
                        required: true
                    },
                    'AboutMySelf.Language': {
                        required: true
                    },
                    'PersonalDetails.Country': {
                        required: true
                    },
                    'PersonalDetails.State': {
                        required: true
                    },

                    'PersonalDetails.JobCountry': {
                        required: true
                    },
                    'PersonalDetails.JobState': {
                        required: true
                    }

                },
                messages: {

                    'PersonalDetails.ProfileName': {
                        required: "Enter your First Name "
                    },
                    'PersonalDetails.ProfileLastName': {
                        required: "Enter your Last Name "
                    },
                    'PersonalDetails.DateofBirth': {
                        required: "Enter your DateofBirth"
                    },
                    'PersonalDetails.Mobile': {
                        required: "Enter your Mobile Number"
                    },

                    'AboutMySelf.Language': {
                        required: "Select your Language "
                    },
                    fileupload: {
                        required: "Upload your Profile Photo "
                    },


                    'AboutMySelf.Job': {
                        required: "Select your Profession"
                    },
                    'AboutMySelf.RelationshipStatus': {
                        required: "Select your Relationship Status "
                    },
                    'AboutMySelf.Language': {
                        required: "Select your Known Language"
                    },
                    'PersonalDetails.Country': {
                        required: "Select Home Country "
                    },
                    'PersonalDetails.State': {
                        required: "Select Home State "
                    },

                    'PersonalDetails.JobCountry': {
                        required: "Select your Job Country "
                    },
                    'PersonalDetails.JobState': {
                        required: "Select your Job State"
                    }


                },
                submitHandler: function (form) {
                    var ProfileName = $("#txtProfileName").val();
                    var ProfileId = $("#hdnProfileId").val();
                    var ProfileLastName = $("#txtProfileLastName").val();
                    var DateofBirth = $("#txtDOB").val();
                    var Mobile = $("#phone").val();
                   // var Countrycode = $("#phone").intlTelInput("getSelectedCountryData").name;
                    var Countrycode = null;
                    var RelationshipStatus = $("#ddlRelationshipStatus :selected").val();
                    var Job = $("#ddlJob :selected").val();
                    var Religion = $("#ddlReligion :selected").val();
                    var Language = $("#ddlLanguage :selected").val();
                    var Caste = $("#ddlCaste :selected").val();
                    var FoodPreference = $("#ddlFoodPreference :selected").val();
                    var Height = $("#ddlHeight :selected").val();
                    var Education = $("#ddlEducation :selected").val();
                    var Country = $("#ddlCountry :selected").val();
                    var State = $("#ddlState :selected").val();
                    var City = $("#ddlCity :selected").val();
                    var Zipcode = $("#txtZipcode").val();
                    var IsSameasAbove = $("#chkjob").is(':checked')
                    var JobCountry = $("#ddlJobCountry :selected").val();
                    var JobState = $("#ddlJobState :selected").val();
                    var JobCity = $("#ddlJobCity :selected").val();
                    var JobZipcode = $("#txtJobZipcode").val();
                    var Introduction = $("#Introduction").val();
                    var Email = $("#txtEmailid").val();
                    var RelationDetail = $("#txtRelationshipDetails").val();
                    var JonDetails = $("#txtJobDetails").val();
                    var EduDetails = $("#txtEducationDetails").val();
                    $.ajax({
                        url: "@Url.Action("SaveProfile", "Home")",
                        contentType: "application/json; charset=utf-8",
                        dataType: "html",
                        data: { ProfileName: ProfileName, ProfileId: ProfileId, ProfileLastName: ProfileLastName, DateofBirth: DateofBirth, Mobile: Mobile, Countrycode: Countrycode, RelationshipStatus: RelationshipStatus, Job: Job, Religion: Religion, Language: Language, Caste: Caste, FoodPreference: FoodPreference, Height: Height, Education: Education, Country: Country, State: State, City: City, Zipcode: Zipcode, IsSameasAbove: IsSameasAbove, JobCountry: JobCountry, JobState: JobState, JobCity: JobCity, JobZipcode: JobZipcode, Introduction: Introduction, Email: Email, RelationshipDetails: RelationDetail, JobDetails: JonDetails, EducationDetails: EduDetails },  // data to submit
                        success: function (data, status, xhr) {
                            if (data == "failure") {
                                swal({
                                    icon: "warning",
                                    text: "Given Email is already Registered with us",
                                    type: "success",
                                    buttons: false
                                });
                                window.setTimeout(function () { window.location = "../Home/Index"; }, 3000);
                            }
                            else {
                                swal({
                                    icon: "success",
                                    text: "Your Data saved successfully...!",
                                    type: "success",
                                    buttons: false
                                });
                                location.reload(true);
                            }
                        },
                        error: function (jqXhr, textStatus, errorMessage) {
                            swal({
                                icon: "warning",
                                text: "Something Could be wrong",
                                type: "success",
                                buttons: false
                            });
                            window.setTimeout(function () { window.location = "../Home/Index"; }, 3000);
                        }
                    });
                }

            });
        });
    });
    </script>

    <script>
        $("#fileupload").on("change", function () {
            var fileUpload = $("#fileupload").get(0);
            var files = fileUpload.files;
            // Create FormData object
            var fileData = new FormData();
            // Looping over all files and add it to FormData object
            var ProfileId = $("#hdnProfileId").val();

            fileData.append("ProfileId", ProfileId);
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }
            if (!(/\.(gif|jpg|jpeg|png)$/i).test(files[0].name)) {
                swal({
                    icon: "warning",
                    text: "gif, jpg, jpeg, png image file only..!",
                    type: "warning"
                });
            }
            else {
                $.ajax({
                    url: '/Home/UploadFiles',
                    type: "POST",
                    contentType: false, // Not to set any content header
                    processData: false, // Not to process data
                    data: fileData,
                    success: function (result) {
                        swal({
                            icon: "success",
                            text: "Photo Uploaded Successfully..!",
                            type: "success",
                            timer: 3000
                        });
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            }
        });

    </script>
    <script>
    $(document).ready(function () {
        $('#chkjob').click(function () {
            if ($(this).prop("checked") == true) {
                var hCountry, hState, hCity, hZipcode;
                hCountry = $("#ddlCountry option:selected").val();
                hState = $("#ddlState option:selected").val();
                hCity = $("#ddlCity option:selected").val();
                hZipcode = $("#txtZipcode").val();
                $("#ddlJobCountry").val(hCountry);
                $.ajax({
                    url: "@Url.Action("States", "DashBoard")",
                    data: { CountryId: hCountry },
                    dataType: "json",
                    type: "GET",
                    error: function () {
                        alert(" An error occurred.");
                    },
                    success: function (data) {
                        $("#ddlJobState").html('');
                        var optionhtml7 = '<option value="' +
                            0 + '">' + "Select State" + '</option>';
                        $("#ddlJobState").append(optionhtml7);
                        $.each(data, function (i) {
                            var optionhtm8 = '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            $("#ddlJobState").append(optionhtm8);
                        });
                        $("#ddlJobState").val(hState);
                    }
                });

                $.ajax({
                    url: "@Url.Action("Cities", "DashBoard")",
                    data: { StateId: hState },
                    dataType: "json",
                    type: "GET",
                    error: function () {
                        alert(" An error occurred.");
                    },
                    success: function (data) {
                        $("#ddlJobCity").html('');
                        var optionhtml9 = '<option value="' +
                            0 + '">' + "Select City" + '</option>';
                        $("#ddlJobCity").append(optionhtml9);
                        $.each(data, function (i) {
                            var optionhtml10 = '<option value="' + data[i].Value + '">' + data[i].Text + '</option>';
                            $("#ddlJobCity").append(optionhtml10);
                        });
                        $("#ddlJobCity").val(hCity);
                    }
                });
                $("#txtJobZipcode").val(hZipcode);
            }
            else {
                $("#ddlJobCountry").val('');
                $("#ddlJobState").val('');
                $("#ddlJobCity").val('');
                $("#txtJobZipcode").val('');
            }
        });
    });
    </script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/16.0.8/css/intlTelInput.css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/16.0.8/js/intlTelInput-jquery.min.js"></script>

    <script type="text/javascript">
        $(function () {
            var code = "+91123456789"; // Assigning value from model.
            $('#phone').val(code);
            $('#phone').intlTelInput({
                autoHideDialCode: true,
                autoPlaceholder: "ON",
                dropdownContainer: document.body,
                formatOnDisplay: true,
                hiddenInput: "full_number",
                initialCountry: "auto",
                nationalMode: true,
                placeholderNumberType: "MOBILE",
                preferredCountries: ['US'],
                separateDialCode: true
            });
        });
    </script>

}